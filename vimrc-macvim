set nocompatible
syntax enable
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'
Bundle 'fatih/vim-go'
" Bundle 'Shougo/neocomplete'
Bundle 'tpope/vim-fugitive'
Bundle 'jszakmeister/vim-togglecursor'

" Plugin 'Valloric/YouCompleteMe'

" The bundles you install will be listed here
" Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" Bundle 'tpope/vim-fugitive'
" Bundle 'scrooloose/nerdtree'
" Bundle 'klen/python-mode'
" Bundle 'davidhalter/jedi-vim'
" Bundle 'nvie/vim-flake8'
call vundle#end()
" The rest of your config follows here
filetype plugin indent on
set background=dark
" set term=xterm-256color
augroup vimrc_autocmds
    autocmd!
    " highlight characters past column 120
    autocmd FileType python highlight Excess ctermbg=Yellow guibg=Yellow
    autocmd FileType python match Excess /\%120v.*/
    autocmd FileType python set nowrap
    autocmd FileType python setlocal completeopt-=preview
    augroup END
set laststatus=2
map <F2> :NERDTreeToggle<CR>

" Python-mode
" Activate rope
" Keys:
" K             Show python docs
" <Ctrl-Space>  Rope autocomplete
" <Ctrl-c>g     Rope goto definition
" <Ctrl-c>d     Rope show documentation
" <Ctrl-c>f     Rope find occurrences
" <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)
" let g:pymode_rope = 0

" Documentation
" let g:pymode_doc = 1
" let g:pymode_doc_key = 'K'

"Linting
" let g:pymode_lint = 1
" let g:pymode_lint_checker = "pyflake,pep8"
" Auto check on save
" let g:pymode_lint_write = 1

" Support virtualenv
" let g:pymode_virtualenv = 1

" Enable breakpoints plugin
" let g:pymode_breakpoint = 1
" let g:pymode_breakpoint_key = '<leader>b'

" syntax highlighting
" let g:pymode_syntax = 1
" let g:pymode_syntax_all = 1
" let g:pymode_syntax_indent_errors = g:pymode_syntax_all
" let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
" let g:pymode_folding = 0
" let g:flake8_max_line_length=120

" let g:neocomplete#enable_at_startup = 1

" Close the window of autocomplete after selected
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

set autochdir
set tabstop=4
set shiftwidth=4
set expandtab
set number
set cursorline
colorscheme codeschool
